///////////////////////////////////////////////////////////////////////////////
// Grid                                                                      //
///////////////////////////////////////////////////////////////////////////////

// stylelint-disable

@use "sass:math";
@import "scaffold";

// Mobile /////////////////////////////////////////////////////////////////////
$columns-mob     : 4;             // Columns number.
$gap-mob         : $base-mob;     // Gutter width.
$gap-mob-out     : $base-mob * 3; // External gutter width.

// Tablet /////////////////////////////////////////////////////////////////////
$columns-tab     : 10;            // Columns number.
$gap-tab         : $base * 2;     // Gutter width.
$gap-tab-out     : $base * 4;     // External gutter width.

// Desktop ////////////////////////////////////////////////////////////////////
$columns         : 13;            // Columns number.
$gap             : $base * 2;     // Gutter width.
$gap-out         : $base * 3;     // External gutter width.

// Set a max width to the grid‘s container, based on
// the wider breakpoint minus the external gutters.
$container-max   : map-get($breakpoints, "max") - ($gap-out * 2);

// Calculate the max width of each grid‘s column.
$column-max      : math.div($container-max - ($gap * ($columns - 1)), $columns);

// Set all Sass variables into CSS ones.
:root {
  --columns      : #{$columns-mob};
  --columns-total: calc(var(--columns) + 2);

  --column-max   : #{$column-max};
  --container-max: #{$container-max};

  --gap          : #{$gap-mob};
  --gap-out      : #{$gap-mob-out};
  --gap-delta    : calc(var(--gap-out) - var(--gap));
  
  @include media(">tablet") {
    --columns    : #{$columns-tab};
    --gap        : #{$gap-tab};
    --gap-out    : #{$gap-tab-out};
  }
  
  @include media(">desktop") {
    --columns    : #{$columns};
    --gap        : #{$gap};
    --gap-out    : #{$gap-out};
  }
}

// stylelint-enable

// Create grid system.
.grid {
  position: relative;
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 0 repeat(var(--columns), 1fr) 0;
  gap: var(--gap);
  place-items: stretch start;
  width: 100%;
  margin-right: auto;
  margin-left: auto;

  @include media(">phonemid") {
    grid-template-columns: var(--gap-delta) repeat(var(--columns), 1fr) var(--gap-delta);
  }

  // Oddly, the `repeat()` function doesn't support `calc()`;
  // thus the use of Sass variables to do the proper math.
  @include media(">max") {
    grid-template-columns: 1fr repeat(var(--columns), var(--column-max)) 1fr;
  }
}
